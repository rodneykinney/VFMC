name: Publish to PyPI

on:
  workflow_dispatch

permissions:
  contents: write  # For creating releases and uploading assets
  id-token: write  # For PyPI trusted publishing

jobs:
  build-vfmc-core:
    name: Build vfmc_core wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Build wheels
        uses: PyO3/maturin-action@v1
        env:
          RUSTFLAGS: "-C target-feature=+avx2"
        with:
          command: build
          args: --release --out dist --find-interpreter
          sccache: 'true'
          working-directory: rust-src

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}
          path: rust-src/dist

  build-vfmc-core-macos:
    name: Build vfmc_core wheels on macOS
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Build wheels for aarch64
        uses: PyO3/maturin-action@v1
        with:
          working-directory: rust-src
          command: build
          args: --release --out dist --target aarch64-apple-darwin --find-interpreter
          sccache: 'true'

      - name: Build wheels for x86_64
        uses: PyO3/maturin-action@v1
        env:
          RUSTFLAGS: "-C target-feature=+avx2"
        with:
          working-directory: rust-src
          command: build
          args: --release --out dist --target x86_64-apple-darwin --find-interpreter
          sccache: 'true'

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-macos
          path: rust-src/dist

  build-vfmc-core-sdist:
    name: Build vfmc_core source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          working-directory: rust-src
          command: sdist
          args: --out dist

      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: rust-src/dist

  publish-vfmc-core:
    name: Publish vfmc_core to PyPI
    runs-on: ubuntu-latest
    needs: [build-vfmc-core, build-vfmc-core-macos, build-vfmc-core-sdist]
    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          path: dist-artifacts

      - name: Publish to PyPI
        uses: PyO3/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        with:
          command: upload
          args: --non-interactive --skip-existing "dist-artifacts/wheels*/*" "dist-artifacts/sdist/*"

  publish-vfmc:
    name: Publish vfmc to PyPI
    runs-on: ubuntu-latest
    needs: [publish-vfmc-core]
    environment: pypi
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build twine
      
      - name: Build package
        run: python -m build
      
      - name: Publish package
        uses: pypa/gh-action-pypi-publish@release/v1
